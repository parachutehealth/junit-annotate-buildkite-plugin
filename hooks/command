#!/bin/bash

set -euo pipefail

PLUGIN_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)/.."
MAX_SIZE=1024 # in KB

echo "--- :junit: Download the junits"

artifacts_dir="$(pwd)/$(mktemp -d "junit-annotate-plugin-artifacts-tmp.XXXXXXXXXX")"
annotation_dir="$(pwd)/$(mktemp -d "junit-annotate-plugin-annotation-tmp.XXXXXXXXXX")"
annotation_path="${annotation_dir}/annotation.md"
annotation_style="info"
fail_build=0

function cleanup {
  rm -rf "${artifacts_dir}"
  rm -rf "${annotation_dir}"
}

function check_size {
  local size_in_kb
  size_in_kb=$(du -k "${annotation_path}" | cut -f 1)
  [ "${size_in_kb}" -lt "${MAX_SIZE}" ]
}

trap cleanup EXIT

buildkite-agent artifact download \
  "${BUILDKITE_PLUGIN_JUNIT_ANNOTATE_ARTIFACTS}" \
  "$artifacts_dir"

echo "--- :junit: Processing the junits"

set +e

ruby "$PLUGIN_DIR/ruby/bin/annotate" "$artifacts_dir" > "$annotation_path"

if [[ $? -eq 64 ]]; then # special exit code to signal test failures
  annotation_style="error"
  if [[ "${BUILDKITE_PLUGIN_JUNIT_ANNOTATE_FAIL_BUILD_ON_ERROR:-false}" =~ (true|on|1) ]]; then
    fail_build=1
  fi
fi

set -e

cat "$annotation_path"

if grep -q "<details>" "$annotation_path"; then
  if ! check_size; then
    echo "--- :warning: Failures too large to annotate"
    msg="The failures are too large to create a build annotation. Please inspect the failed JUnit artifacts manually."
    echo "$msg"
  else
    echo "--- :buildkite: Creating annotation"
    # shellcheck disable=SC2002
    cat "$annotation_path" | buildkite-agent annotate --context "${BUILDKITE_PLUGIN_JUNIT_ANNOTATE_CONTEXT:-junit}" --style "$annotation_style"
  fi
fi

if ((fail_build)); then
  echo "--- :boom: Failing build due to error"
  exit 1
else
  exit 0
fi
